Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> statement_list
Rule 2     statement_list -> statement statement_list
Rule 3     statement_list -> <empty>
Rule 4     statement -> IF LPAREN expression RPAREN block else_clause
Rule 5     else_clause -> ELSE block
Rule 6     else_clause -> <empty>
Rule 7     statement -> WHILE LPAREN expression RPAREN block
Rule 8     statement -> block
Rule 9     block -> LBRACE statement_list RBRACE
Rule 10    statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 11    statement -> NAME ASSIGN expression SEMICOLON
Rule 12    statement -> NAME assign_index ASSIGN expression SEMICOLON
Rule 13    assign_index -> LBRACKET expression RBRACKET assign_index_list
Rule 14    assign_index_list -> LBRACKET expression RBRACKET assign_index_list
Rule 15    assign_index_list -> <empty>
Rule 16    expression -> LPAREN expression RPAREN
Rule 17    expression -> value
Rule 18    expression -> MINUS expression
Rule 19    expression -> expression PLUS expression
Rule 20    expression -> expression MINUS expression
Rule 21    expression -> expression TIMES expression
Rule 22    expression -> expression DIVIDE expression
Rule 23    expression -> expression LT expression
Rule 24    expression -> expression LTE expression
Rule 25    expression -> expression GT expression
Rule 26    expression -> expression GTE expression
Rule 27    expression -> expression EQ expression
Rule 28    expression -> expression NOTEQ expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression OR expression
Rule 31    expression -> expression IN expression
Rule 32    expression -> expression DIV expression
Rule 33    expression -> expression MOD expression
Rule 34    expression -> expression CONS expression
Rule 35    expression -> expression EXP expression
Rule 36    expression -> NOT expression
Rule 37    value -> REAL
Rule 38    value -> INTEGER
Rule 39    value -> STRING
Rule 40    value -> bool
Rule 41    expression -> NAME
Rule 42    expression -> list_construction
Rule 43    expression -> index_expression
Rule 44    expression -> tuple_construction
Rule 45    expression -> hash_expression
Rule 46    hash_expression -> HASH expression expression
Rule 47    tuple_construction -> LPAREN expression COMMA tuple_tail
Rule 48    tuple_construction -> LPAREN RPAREN
Rule 49    tuple_tail -> expression COMMA tuple_tail
Rule 50    tuple_tail -> expression RPAREN
Rule 51    tuple_tail -> RPAREN
Rule 52    index_expression -> expression LBRACKET expression RBRACKET
Rule 53    bool -> TRUE
Rule 54    bool -> FALSE
Rule 55    list_construction -> LBRACKET expression list_tail
Rule 56    list_construction -> LBRACKET RBRACKET
Rule 57    list_tail -> COMMA expression list_tail
Rule 58    list_tail -> RBRACKET

Terminals, with rules where they appear

AND                  : 29
ASSIGN               : 11 12
COMMA                : 47 49 57
CONS                 : 34
DIV                  : 32
DIVIDE               : 22
ELSE                 : 5
EQ                   : 27
EXP                  : 35
FALSE                : 54
GT                   : 25
GTE                  : 26
HASH                 : 46
IF                   : 4
IN                   : 31
INTEGER              : 38
LBRACE               : 9
LBRACKET             : 13 14 52 55 56
LPAREN               : 4 7 10 16 47 48
LT                   : 23
LTE                  : 24
MINUS                : 18 20
MOD                  : 33
NAME                 : 11 12 41
NOT                  : 36
NOTEQ                : 28
OR                   : 30
PLUS                 : 19
PRINT                : 10
RBRACE               : 9
RBRACKET             : 13 14 52 56 58
REAL                 : 37
RPAREN               : 4 7 10 16 48 50 51
SEMICOLON            : 10 11 12
STRING               : 39
TIMES                : 21
TRUE                 : 53
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

assign_index         : 12
assign_index_list    : 13 14
block                : 4 5 7 8
bool                 : 40
else_clause          : 4
expression           : 4 7 10 11 12 13 14 16 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 46 46 47 49 50 52 52 55 57
hash_expression      : 45
index_expression     : 43
list_construction    : 42
list_tail            : 55 57
start                : 0
statement            : 2
statement_list       : 1 2 9
tuple_construction   : 44
tuple_tail           : 47 49
value                : 17

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statement_list
    (2) statement_list -> . statement statement_list
    (3) statement_list -> .
    (4) statement -> . IF LPAREN expression RPAREN block else_clause
    (7) statement -> . WHILE LPAREN expression RPAREN block
    (8) statement -> . block
    (10) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (11) statement -> . NAME ASSIGN expression SEMICOLON
    (12) statement -> . NAME assign_index ASSIGN expression SEMICOLON
    (9) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 3 (statement_list -> .)
    IF              shift and go to state 4
    WHILE           shift and go to state 6
    PRINT           shift and go to state 7
    NAME            shift and go to state 8
    LBRACE          shift and go to state 9

    start                          shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    block                          shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> statement_list .

    $end            reduce using rule 1 (start -> statement_list .)


state 3

    (2) statement_list -> statement . statement_list
    (2) statement_list -> . statement statement_list
    (3) statement_list -> .
    (4) statement -> . IF LPAREN expression RPAREN block else_clause
    (7) statement -> . WHILE LPAREN expression RPAREN block
    (8) statement -> . block
    (10) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (11) statement -> . NAME ASSIGN expression SEMICOLON
    (12) statement -> . NAME assign_index ASSIGN expression SEMICOLON
    (9) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 3 (statement_list -> .)
    RBRACE          reduce using rule 3 (statement_list -> .)
    IF              shift and go to state 4
    WHILE           shift and go to state 6
    PRINT           shift and go to state 7
    NAME            shift and go to state 8
    LBRACE          shift and go to state 9

    statement                      shift and go to state 3
    statement_list                 shift and go to state 10
    block                          shift and go to state 5

state 4

    (4) statement -> IF . LPAREN expression RPAREN block else_clause

    LPAREN          shift and go to state 11


state 5

    (8) statement -> block .

    IF              reduce using rule 8 (statement -> block .)
    WHILE           reduce using rule 8 (statement -> block .)
    PRINT           reduce using rule 8 (statement -> block .)
    NAME            reduce using rule 8 (statement -> block .)
    LBRACE          reduce using rule 8 (statement -> block .)
    $end            reduce using rule 8 (statement -> block .)
    RBRACE          reduce using rule 8 (statement -> block .)


state 6

    (7) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 12


state 7

    (10) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 13


state 8

    (11) statement -> NAME . ASSIGN expression SEMICOLON
    (12) statement -> NAME . assign_index ASSIGN expression SEMICOLON
    (13) assign_index -> . LBRACKET expression RBRACKET assign_index_list

    ASSIGN          shift and go to state 14
    LBRACKET        shift and go to state 16

    assign_index                   shift and go to state 15

state 9

    (9) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement statement_list
    (3) statement_list -> .
    (4) statement -> . IF LPAREN expression RPAREN block else_clause
    (7) statement -> . WHILE LPAREN expression RPAREN block
    (8) statement -> . block
    (10) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (11) statement -> . NAME ASSIGN expression SEMICOLON
    (12) statement -> . NAME assign_index ASSIGN expression SEMICOLON
    (9) block -> . LBRACE statement_list RBRACE

    RBRACE          reduce using rule 3 (statement_list -> .)
    IF              shift and go to state 4
    WHILE           shift and go to state 6
    PRINT           shift and go to state 7
    NAME            shift and go to state 8
    LBRACE          shift and go to state 9

    statement_list                 shift and go to state 17
    statement                      shift and go to state 3
    block                          shift and go to state 5

state 10

    (2) statement_list -> statement statement_list .

    $end            reduce using rule 2 (statement_list -> statement statement_list .)
    RBRACE          reduce using rule 2 (statement_list -> statement statement_list .)


state 11

    (4) statement -> IF LPAREN . expression RPAREN block else_clause
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 19
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 12

    (7) statement -> WHILE LPAREN . expression RPAREN block
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 36
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 13

    (10) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 37
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 14

    (11) statement -> NAME ASSIGN . expression SEMICOLON
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 38
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 15

    (12) statement -> NAME assign_index . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 39


state 16

    (13) assign_index -> LBRACKET . expression RBRACKET assign_index_list
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 40
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 17

    (9) block -> LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 41


state 18

    (16) expression -> LPAREN . expression RPAREN
    (47) tuple_construction -> LPAREN . expression COMMA tuple_tail
    (48) tuple_construction -> LPAREN . RPAREN
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    RPAREN          shift and go to state 43
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 42
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 19

    (4) statement -> IF LPAREN expression . RPAREN block else_clause
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 20

    (17) expression -> value .

    RPAREN          reduce using rule 17 (expression -> value .)
    PLUS            reduce using rule 17 (expression -> value .)
    MINUS           reduce using rule 17 (expression -> value .)
    TIMES           reduce using rule 17 (expression -> value .)
    DIVIDE          reduce using rule 17 (expression -> value .)
    LT              reduce using rule 17 (expression -> value .)
    LTE             reduce using rule 17 (expression -> value .)
    GT              reduce using rule 17 (expression -> value .)
    GTE             reduce using rule 17 (expression -> value .)
    EQ              reduce using rule 17 (expression -> value .)
    NOTEQ           reduce using rule 17 (expression -> value .)
    AND             reduce using rule 17 (expression -> value .)
    OR              reduce using rule 17 (expression -> value .)
    IN              reduce using rule 17 (expression -> value .)
    DIV             reduce using rule 17 (expression -> value .)
    MOD             reduce using rule 17 (expression -> value .)
    CONS            reduce using rule 17 (expression -> value .)
    EXP             reduce using rule 17 (expression -> value .)
    LBRACKET        reduce using rule 17 (expression -> value .)
    SEMICOLON       reduce using rule 17 (expression -> value .)
    RBRACKET        reduce using rule 17 (expression -> value .)
    COMMA           reduce using rule 17 (expression -> value .)
    LPAREN          reduce using rule 17 (expression -> value .)
    NOT             reduce using rule 17 (expression -> value .)
    NAME            reduce using rule 17 (expression -> value .)
    REAL            reduce using rule 17 (expression -> value .)
    INTEGER         reduce using rule 17 (expression -> value .)
    STRING          reduce using rule 17 (expression -> value .)
    HASH            reduce using rule 17 (expression -> value .)
    TRUE            reduce using rule 17 (expression -> value .)
    FALSE           reduce using rule 17 (expression -> value .)


state 21

    (18) expression -> MINUS . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 63
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 22

    (36) expression -> NOT . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 64
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 23

    (41) expression -> NAME .

    RPAREN          reduce using rule 41 (expression -> NAME .)
    PLUS            reduce using rule 41 (expression -> NAME .)
    MINUS           reduce using rule 41 (expression -> NAME .)
    TIMES           reduce using rule 41 (expression -> NAME .)
    DIVIDE          reduce using rule 41 (expression -> NAME .)
    LT              reduce using rule 41 (expression -> NAME .)
    LTE             reduce using rule 41 (expression -> NAME .)
    GT              reduce using rule 41 (expression -> NAME .)
    GTE             reduce using rule 41 (expression -> NAME .)
    EQ              reduce using rule 41 (expression -> NAME .)
    NOTEQ           reduce using rule 41 (expression -> NAME .)
    AND             reduce using rule 41 (expression -> NAME .)
    OR              reduce using rule 41 (expression -> NAME .)
    IN              reduce using rule 41 (expression -> NAME .)
    DIV             reduce using rule 41 (expression -> NAME .)
    MOD             reduce using rule 41 (expression -> NAME .)
    CONS            reduce using rule 41 (expression -> NAME .)
    EXP             reduce using rule 41 (expression -> NAME .)
    LBRACKET        reduce using rule 41 (expression -> NAME .)
    SEMICOLON       reduce using rule 41 (expression -> NAME .)
    RBRACKET        reduce using rule 41 (expression -> NAME .)
    COMMA           reduce using rule 41 (expression -> NAME .)
    LPAREN          reduce using rule 41 (expression -> NAME .)
    NOT             reduce using rule 41 (expression -> NAME .)
    NAME            reduce using rule 41 (expression -> NAME .)
    REAL            reduce using rule 41 (expression -> NAME .)
    INTEGER         reduce using rule 41 (expression -> NAME .)
    STRING          reduce using rule 41 (expression -> NAME .)
    HASH            reduce using rule 41 (expression -> NAME .)
    TRUE            reduce using rule 41 (expression -> NAME .)
    FALSE           reduce using rule 41 (expression -> NAME .)


state 24

    (42) expression -> list_construction .

    RPAREN          reduce using rule 42 (expression -> list_construction .)
    PLUS            reduce using rule 42 (expression -> list_construction .)
    MINUS           reduce using rule 42 (expression -> list_construction .)
    TIMES           reduce using rule 42 (expression -> list_construction .)
    DIVIDE          reduce using rule 42 (expression -> list_construction .)
    LT              reduce using rule 42 (expression -> list_construction .)
    LTE             reduce using rule 42 (expression -> list_construction .)
    GT              reduce using rule 42 (expression -> list_construction .)
    GTE             reduce using rule 42 (expression -> list_construction .)
    EQ              reduce using rule 42 (expression -> list_construction .)
    NOTEQ           reduce using rule 42 (expression -> list_construction .)
    AND             reduce using rule 42 (expression -> list_construction .)
    OR              reduce using rule 42 (expression -> list_construction .)
    IN              reduce using rule 42 (expression -> list_construction .)
    DIV             reduce using rule 42 (expression -> list_construction .)
    MOD             reduce using rule 42 (expression -> list_construction .)
    CONS            reduce using rule 42 (expression -> list_construction .)
    EXP             reduce using rule 42 (expression -> list_construction .)
    LBRACKET        reduce using rule 42 (expression -> list_construction .)
    SEMICOLON       reduce using rule 42 (expression -> list_construction .)
    RBRACKET        reduce using rule 42 (expression -> list_construction .)
    COMMA           reduce using rule 42 (expression -> list_construction .)
    LPAREN          reduce using rule 42 (expression -> list_construction .)
    NOT             reduce using rule 42 (expression -> list_construction .)
    NAME            reduce using rule 42 (expression -> list_construction .)
    REAL            reduce using rule 42 (expression -> list_construction .)
    INTEGER         reduce using rule 42 (expression -> list_construction .)
    STRING          reduce using rule 42 (expression -> list_construction .)
    HASH            reduce using rule 42 (expression -> list_construction .)
    TRUE            reduce using rule 42 (expression -> list_construction .)
    FALSE           reduce using rule 42 (expression -> list_construction .)


state 25

    (43) expression -> index_expression .

    RPAREN          reduce using rule 43 (expression -> index_expression .)
    PLUS            reduce using rule 43 (expression -> index_expression .)
    MINUS           reduce using rule 43 (expression -> index_expression .)
    TIMES           reduce using rule 43 (expression -> index_expression .)
    DIVIDE          reduce using rule 43 (expression -> index_expression .)
    LT              reduce using rule 43 (expression -> index_expression .)
    LTE             reduce using rule 43 (expression -> index_expression .)
    GT              reduce using rule 43 (expression -> index_expression .)
    GTE             reduce using rule 43 (expression -> index_expression .)
    EQ              reduce using rule 43 (expression -> index_expression .)
    NOTEQ           reduce using rule 43 (expression -> index_expression .)
    AND             reduce using rule 43 (expression -> index_expression .)
    OR              reduce using rule 43 (expression -> index_expression .)
    IN              reduce using rule 43 (expression -> index_expression .)
    DIV             reduce using rule 43 (expression -> index_expression .)
    MOD             reduce using rule 43 (expression -> index_expression .)
    CONS            reduce using rule 43 (expression -> index_expression .)
    EXP             reduce using rule 43 (expression -> index_expression .)
    LBRACKET        reduce using rule 43 (expression -> index_expression .)
    SEMICOLON       reduce using rule 43 (expression -> index_expression .)
    RBRACKET        reduce using rule 43 (expression -> index_expression .)
    COMMA           reduce using rule 43 (expression -> index_expression .)
    LPAREN          reduce using rule 43 (expression -> index_expression .)
    NOT             reduce using rule 43 (expression -> index_expression .)
    NAME            reduce using rule 43 (expression -> index_expression .)
    REAL            reduce using rule 43 (expression -> index_expression .)
    INTEGER         reduce using rule 43 (expression -> index_expression .)
    STRING          reduce using rule 43 (expression -> index_expression .)
    HASH            reduce using rule 43 (expression -> index_expression .)
    TRUE            reduce using rule 43 (expression -> index_expression .)
    FALSE           reduce using rule 43 (expression -> index_expression .)


state 26

    (44) expression -> tuple_construction .

    RPAREN          reduce using rule 44 (expression -> tuple_construction .)
    PLUS            reduce using rule 44 (expression -> tuple_construction .)
    MINUS           reduce using rule 44 (expression -> tuple_construction .)
    TIMES           reduce using rule 44 (expression -> tuple_construction .)
    DIVIDE          reduce using rule 44 (expression -> tuple_construction .)
    LT              reduce using rule 44 (expression -> tuple_construction .)
    LTE             reduce using rule 44 (expression -> tuple_construction .)
    GT              reduce using rule 44 (expression -> tuple_construction .)
    GTE             reduce using rule 44 (expression -> tuple_construction .)
    EQ              reduce using rule 44 (expression -> tuple_construction .)
    NOTEQ           reduce using rule 44 (expression -> tuple_construction .)
    AND             reduce using rule 44 (expression -> tuple_construction .)
    OR              reduce using rule 44 (expression -> tuple_construction .)
    IN              reduce using rule 44 (expression -> tuple_construction .)
    DIV             reduce using rule 44 (expression -> tuple_construction .)
    MOD             reduce using rule 44 (expression -> tuple_construction .)
    CONS            reduce using rule 44 (expression -> tuple_construction .)
    EXP             reduce using rule 44 (expression -> tuple_construction .)
    LBRACKET        reduce using rule 44 (expression -> tuple_construction .)
    SEMICOLON       reduce using rule 44 (expression -> tuple_construction .)
    RBRACKET        reduce using rule 44 (expression -> tuple_construction .)
    COMMA           reduce using rule 44 (expression -> tuple_construction .)
    LPAREN          reduce using rule 44 (expression -> tuple_construction .)
    NOT             reduce using rule 44 (expression -> tuple_construction .)
    NAME            reduce using rule 44 (expression -> tuple_construction .)
    REAL            reduce using rule 44 (expression -> tuple_construction .)
    INTEGER         reduce using rule 44 (expression -> tuple_construction .)
    STRING          reduce using rule 44 (expression -> tuple_construction .)
    HASH            reduce using rule 44 (expression -> tuple_construction .)
    TRUE            reduce using rule 44 (expression -> tuple_construction .)
    FALSE           reduce using rule 44 (expression -> tuple_construction .)


state 27

    (45) expression -> hash_expression .

    RPAREN          reduce using rule 45 (expression -> hash_expression .)
    PLUS            reduce using rule 45 (expression -> hash_expression .)
    MINUS           reduce using rule 45 (expression -> hash_expression .)
    TIMES           reduce using rule 45 (expression -> hash_expression .)
    DIVIDE          reduce using rule 45 (expression -> hash_expression .)
    LT              reduce using rule 45 (expression -> hash_expression .)
    LTE             reduce using rule 45 (expression -> hash_expression .)
    GT              reduce using rule 45 (expression -> hash_expression .)
    GTE             reduce using rule 45 (expression -> hash_expression .)
    EQ              reduce using rule 45 (expression -> hash_expression .)
    NOTEQ           reduce using rule 45 (expression -> hash_expression .)
    AND             reduce using rule 45 (expression -> hash_expression .)
    OR              reduce using rule 45 (expression -> hash_expression .)
    IN              reduce using rule 45 (expression -> hash_expression .)
    DIV             reduce using rule 45 (expression -> hash_expression .)
    MOD             reduce using rule 45 (expression -> hash_expression .)
    CONS            reduce using rule 45 (expression -> hash_expression .)
    EXP             reduce using rule 45 (expression -> hash_expression .)
    LBRACKET        reduce using rule 45 (expression -> hash_expression .)
    SEMICOLON       reduce using rule 45 (expression -> hash_expression .)
    RBRACKET        reduce using rule 45 (expression -> hash_expression .)
    COMMA           reduce using rule 45 (expression -> hash_expression .)
    LPAREN          reduce using rule 45 (expression -> hash_expression .)
    NOT             reduce using rule 45 (expression -> hash_expression .)
    NAME            reduce using rule 45 (expression -> hash_expression .)
    REAL            reduce using rule 45 (expression -> hash_expression .)
    INTEGER         reduce using rule 45 (expression -> hash_expression .)
    STRING          reduce using rule 45 (expression -> hash_expression .)
    HASH            reduce using rule 45 (expression -> hash_expression .)
    TRUE            reduce using rule 45 (expression -> hash_expression .)
    FALSE           reduce using rule 45 (expression -> hash_expression .)


state 28

    (37) value -> REAL .

    RPAREN          reduce using rule 37 (value -> REAL .)
    PLUS            reduce using rule 37 (value -> REAL .)
    MINUS           reduce using rule 37 (value -> REAL .)
    TIMES           reduce using rule 37 (value -> REAL .)
    DIVIDE          reduce using rule 37 (value -> REAL .)
    LT              reduce using rule 37 (value -> REAL .)
    LTE             reduce using rule 37 (value -> REAL .)
    GT              reduce using rule 37 (value -> REAL .)
    GTE             reduce using rule 37 (value -> REAL .)
    EQ              reduce using rule 37 (value -> REAL .)
    NOTEQ           reduce using rule 37 (value -> REAL .)
    AND             reduce using rule 37 (value -> REAL .)
    OR              reduce using rule 37 (value -> REAL .)
    IN              reduce using rule 37 (value -> REAL .)
    DIV             reduce using rule 37 (value -> REAL .)
    MOD             reduce using rule 37 (value -> REAL .)
    CONS            reduce using rule 37 (value -> REAL .)
    EXP             reduce using rule 37 (value -> REAL .)
    LBRACKET        reduce using rule 37 (value -> REAL .)
    SEMICOLON       reduce using rule 37 (value -> REAL .)
    RBRACKET        reduce using rule 37 (value -> REAL .)
    COMMA           reduce using rule 37 (value -> REAL .)
    LPAREN          reduce using rule 37 (value -> REAL .)
    NOT             reduce using rule 37 (value -> REAL .)
    NAME            reduce using rule 37 (value -> REAL .)
    REAL            reduce using rule 37 (value -> REAL .)
    INTEGER         reduce using rule 37 (value -> REAL .)
    STRING          reduce using rule 37 (value -> REAL .)
    HASH            reduce using rule 37 (value -> REAL .)
    TRUE            reduce using rule 37 (value -> REAL .)
    FALSE           reduce using rule 37 (value -> REAL .)


state 29

    (38) value -> INTEGER .

    RPAREN          reduce using rule 38 (value -> INTEGER .)
    PLUS            reduce using rule 38 (value -> INTEGER .)
    MINUS           reduce using rule 38 (value -> INTEGER .)
    TIMES           reduce using rule 38 (value -> INTEGER .)
    DIVIDE          reduce using rule 38 (value -> INTEGER .)
    LT              reduce using rule 38 (value -> INTEGER .)
    LTE             reduce using rule 38 (value -> INTEGER .)
    GT              reduce using rule 38 (value -> INTEGER .)
    GTE             reduce using rule 38 (value -> INTEGER .)
    EQ              reduce using rule 38 (value -> INTEGER .)
    NOTEQ           reduce using rule 38 (value -> INTEGER .)
    AND             reduce using rule 38 (value -> INTEGER .)
    OR              reduce using rule 38 (value -> INTEGER .)
    IN              reduce using rule 38 (value -> INTEGER .)
    DIV             reduce using rule 38 (value -> INTEGER .)
    MOD             reduce using rule 38 (value -> INTEGER .)
    CONS            reduce using rule 38 (value -> INTEGER .)
    EXP             reduce using rule 38 (value -> INTEGER .)
    LBRACKET        reduce using rule 38 (value -> INTEGER .)
    SEMICOLON       reduce using rule 38 (value -> INTEGER .)
    RBRACKET        reduce using rule 38 (value -> INTEGER .)
    COMMA           reduce using rule 38 (value -> INTEGER .)
    LPAREN          reduce using rule 38 (value -> INTEGER .)
    NOT             reduce using rule 38 (value -> INTEGER .)
    NAME            reduce using rule 38 (value -> INTEGER .)
    REAL            reduce using rule 38 (value -> INTEGER .)
    INTEGER         reduce using rule 38 (value -> INTEGER .)
    STRING          reduce using rule 38 (value -> INTEGER .)
    HASH            reduce using rule 38 (value -> INTEGER .)
    TRUE            reduce using rule 38 (value -> INTEGER .)
    FALSE           reduce using rule 38 (value -> INTEGER .)


state 30

    (39) value -> STRING .

    RPAREN          reduce using rule 39 (value -> STRING .)
    PLUS            reduce using rule 39 (value -> STRING .)
    MINUS           reduce using rule 39 (value -> STRING .)
    TIMES           reduce using rule 39 (value -> STRING .)
    DIVIDE          reduce using rule 39 (value -> STRING .)
    LT              reduce using rule 39 (value -> STRING .)
    LTE             reduce using rule 39 (value -> STRING .)
    GT              reduce using rule 39 (value -> STRING .)
    GTE             reduce using rule 39 (value -> STRING .)
    EQ              reduce using rule 39 (value -> STRING .)
    NOTEQ           reduce using rule 39 (value -> STRING .)
    AND             reduce using rule 39 (value -> STRING .)
    OR              reduce using rule 39 (value -> STRING .)
    IN              reduce using rule 39 (value -> STRING .)
    DIV             reduce using rule 39 (value -> STRING .)
    MOD             reduce using rule 39 (value -> STRING .)
    CONS            reduce using rule 39 (value -> STRING .)
    EXP             reduce using rule 39 (value -> STRING .)
    LBRACKET        reduce using rule 39 (value -> STRING .)
    SEMICOLON       reduce using rule 39 (value -> STRING .)
    RBRACKET        reduce using rule 39 (value -> STRING .)
    COMMA           reduce using rule 39 (value -> STRING .)
    LPAREN          reduce using rule 39 (value -> STRING .)
    NOT             reduce using rule 39 (value -> STRING .)
    NAME            reduce using rule 39 (value -> STRING .)
    REAL            reduce using rule 39 (value -> STRING .)
    INTEGER         reduce using rule 39 (value -> STRING .)
    STRING          reduce using rule 39 (value -> STRING .)
    HASH            reduce using rule 39 (value -> STRING .)
    TRUE            reduce using rule 39 (value -> STRING .)
    FALSE           reduce using rule 39 (value -> STRING .)


state 31

    (40) value -> bool .

    RPAREN          reduce using rule 40 (value -> bool .)
    PLUS            reduce using rule 40 (value -> bool .)
    MINUS           reduce using rule 40 (value -> bool .)
    TIMES           reduce using rule 40 (value -> bool .)
    DIVIDE          reduce using rule 40 (value -> bool .)
    LT              reduce using rule 40 (value -> bool .)
    LTE             reduce using rule 40 (value -> bool .)
    GT              reduce using rule 40 (value -> bool .)
    GTE             reduce using rule 40 (value -> bool .)
    EQ              reduce using rule 40 (value -> bool .)
    NOTEQ           reduce using rule 40 (value -> bool .)
    AND             reduce using rule 40 (value -> bool .)
    OR              reduce using rule 40 (value -> bool .)
    IN              reduce using rule 40 (value -> bool .)
    DIV             reduce using rule 40 (value -> bool .)
    MOD             reduce using rule 40 (value -> bool .)
    CONS            reduce using rule 40 (value -> bool .)
    EXP             reduce using rule 40 (value -> bool .)
    LBRACKET        reduce using rule 40 (value -> bool .)
    SEMICOLON       reduce using rule 40 (value -> bool .)
    RBRACKET        reduce using rule 40 (value -> bool .)
    COMMA           reduce using rule 40 (value -> bool .)
    LPAREN          reduce using rule 40 (value -> bool .)
    NOT             reduce using rule 40 (value -> bool .)
    NAME            reduce using rule 40 (value -> bool .)
    REAL            reduce using rule 40 (value -> bool .)
    INTEGER         reduce using rule 40 (value -> bool .)
    STRING          reduce using rule 40 (value -> bool .)
    HASH            reduce using rule 40 (value -> bool .)
    TRUE            reduce using rule 40 (value -> bool .)
    FALSE           reduce using rule 40 (value -> bool .)


state 32

    (55) list_construction -> LBRACKET . expression list_tail
    (56) list_construction -> LBRACKET . RBRACKET
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    RBRACKET        shift and go to state 66
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 65
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 33

    (46) hash_expression -> HASH . expression expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 67
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 34

    (53) bool -> TRUE .

    RPAREN          reduce using rule 53 (bool -> TRUE .)
    PLUS            reduce using rule 53 (bool -> TRUE .)
    MINUS           reduce using rule 53 (bool -> TRUE .)
    TIMES           reduce using rule 53 (bool -> TRUE .)
    DIVIDE          reduce using rule 53 (bool -> TRUE .)
    LT              reduce using rule 53 (bool -> TRUE .)
    LTE             reduce using rule 53 (bool -> TRUE .)
    GT              reduce using rule 53 (bool -> TRUE .)
    GTE             reduce using rule 53 (bool -> TRUE .)
    EQ              reduce using rule 53 (bool -> TRUE .)
    NOTEQ           reduce using rule 53 (bool -> TRUE .)
    AND             reduce using rule 53 (bool -> TRUE .)
    OR              reduce using rule 53 (bool -> TRUE .)
    IN              reduce using rule 53 (bool -> TRUE .)
    DIV             reduce using rule 53 (bool -> TRUE .)
    MOD             reduce using rule 53 (bool -> TRUE .)
    CONS            reduce using rule 53 (bool -> TRUE .)
    EXP             reduce using rule 53 (bool -> TRUE .)
    LBRACKET        reduce using rule 53 (bool -> TRUE .)
    SEMICOLON       reduce using rule 53 (bool -> TRUE .)
    RBRACKET        reduce using rule 53 (bool -> TRUE .)
    COMMA           reduce using rule 53 (bool -> TRUE .)
    LPAREN          reduce using rule 53 (bool -> TRUE .)
    NOT             reduce using rule 53 (bool -> TRUE .)
    NAME            reduce using rule 53 (bool -> TRUE .)
    REAL            reduce using rule 53 (bool -> TRUE .)
    INTEGER         reduce using rule 53 (bool -> TRUE .)
    STRING          reduce using rule 53 (bool -> TRUE .)
    HASH            reduce using rule 53 (bool -> TRUE .)
    TRUE            reduce using rule 53 (bool -> TRUE .)
    FALSE           reduce using rule 53 (bool -> TRUE .)


state 35

    (54) bool -> FALSE .

    RPAREN          reduce using rule 54 (bool -> FALSE .)
    PLUS            reduce using rule 54 (bool -> FALSE .)
    MINUS           reduce using rule 54 (bool -> FALSE .)
    TIMES           reduce using rule 54 (bool -> FALSE .)
    DIVIDE          reduce using rule 54 (bool -> FALSE .)
    LT              reduce using rule 54 (bool -> FALSE .)
    LTE             reduce using rule 54 (bool -> FALSE .)
    GT              reduce using rule 54 (bool -> FALSE .)
    GTE             reduce using rule 54 (bool -> FALSE .)
    EQ              reduce using rule 54 (bool -> FALSE .)
    NOTEQ           reduce using rule 54 (bool -> FALSE .)
    AND             reduce using rule 54 (bool -> FALSE .)
    OR              reduce using rule 54 (bool -> FALSE .)
    IN              reduce using rule 54 (bool -> FALSE .)
    DIV             reduce using rule 54 (bool -> FALSE .)
    MOD             reduce using rule 54 (bool -> FALSE .)
    CONS            reduce using rule 54 (bool -> FALSE .)
    EXP             reduce using rule 54 (bool -> FALSE .)
    LBRACKET        reduce using rule 54 (bool -> FALSE .)
    SEMICOLON       reduce using rule 54 (bool -> FALSE .)
    RBRACKET        reduce using rule 54 (bool -> FALSE .)
    COMMA           reduce using rule 54 (bool -> FALSE .)
    LPAREN          reduce using rule 54 (bool -> FALSE .)
    NOT             reduce using rule 54 (bool -> FALSE .)
    NAME            reduce using rule 54 (bool -> FALSE .)
    REAL            reduce using rule 54 (bool -> FALSE .)
    INTEGER         reduce using rule 54 (bool -> FALSE .)
    STRING          reduce using rule 54 (bool -> FALSE .)
    HASH            reduce using rule 54 (bool -> FALSE .)
    TRUE            reduce using rule 54 (bool -> FALSE .)
    FALSE           reduce using rule 54 (bool -> FALSE .)


state 36

    (7) statement -> WHILE LPAREN expression . RPAREN block
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 37

    (10) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 38

    (11) statement -> NAME ASSIGN expression . SEMICOLON
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 39

    (12) statement -> NAME assign_index ASSIGN . expression SEMICOLON
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 71
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 40

    (13) assign_index -> LBRACKET expression . RBRACKET assign_index_list
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 72
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 41

    (9) block -> LBRACE statement_list RBRACE .

    IF              reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    NAME            reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 9 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 9 (block -> LBRACE statement_list RBRACE .)


state 42

    (16) expression -> LPAREN expression . RPAREN
    (47) tuple_construction -> LPAREN expression . COMMA tuple_tail
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 73
    COMMA           shift and go to state 74
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 43

    (48) tuple_construction -> LPAREN RPAREN .

    RPAREN          reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    PLUS            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    MINUS           reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    TIMES           reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    DIVIDE          reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    LT              reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    LTE             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    GT              reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    GTE             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    EQ              reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    NOTEQ           reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    AND             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    OR              reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    IN              reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    DIV             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    MOD             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    CONS            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    EXP             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    LBRACKET        reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    RBRACKET        reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    COMMA           reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    LPAREN          reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    NOT             reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    NAME            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    REAL            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    INTEGER         reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    STRING          reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    HASH            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    TRUE            reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)
    FALSE           reduce using rule 48 (tuple_construction -> LPAREN RPAREN .)


state 44

    (4) statement -> IF LPAREN expression RPAREN . block else_clause
    (9) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 9

    block                          shift and go to state 75

state 45

    (19) expression -> expression PLUS . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 76
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 46

    (20) expression -> expression MINUS . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 77
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 47

    (21) expression -> expression TIMES . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 78
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 48

    (22) expression -> expression DIVIDE . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 79
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 49

    (23) expression -> expression LT . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 80
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 50

    (24) expression -> expression LTE . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 81
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 51

    (25) expression -> expression GT . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 82
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 52

    (26) expression -> expression GTE . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 83
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 53

    (27) expression -> expression EQ . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 84
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 54

    (28) expression -> expression NOTEQ . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 85
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 55

    (29) expression -> expression AND . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 86
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 56

    (30) expression -> expression OR . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 87
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 57

    (31) expression -> expression IN . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 88
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 58

    (32) expression -> expression DIV . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 89
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 59

    (33) expression -> expression MOD . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 90
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 60

    (34) expression -> expression CONS . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 91
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 61

    (35) expression -> expression EXP . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 92
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 62

    (52) index_expression -> expression LBRACKET . expression RBRACKET
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 93
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 63

    (18) expression -> MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 18 (expression -> MINUS expression .)
    PLUS            reduce using rule 18 (expression -> MINUS expression .)
    MINUS           reduce using rule 18 (expression -> MINUS expression .)
    TIMES           reduce using rule 18 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 18 (expression -> MINUS expression .)
    LT              reduce using rule 18 (expression -> MINUS expression .)
    LTE             reduce using rule 18 (expression -> MINUS expression .)
    GT              reduce using rule 18 (expression -> MINUS expression .)
    GTE             reduce using rule 18 (expression -> MINUS expression .)
    EQ              reduce using rule 18 (expression -> MINUS expression .)
    NOTEQ           reduce using rule 18 (expression -> MINUS expression .)
    AND             reduce using rule 18 (expression -> MINUS expression .)
    OR              reduce using rule 18 (expression -> MINUS expression .)
    IN              reduce using rule 18 (expression -> MINUS expression .)
    DIV             reduce using rule 18 (expression -> MINUS expression .)
    MOD             reduce using rule 18 (expression -> MINUS expression .)
    CONS            reduce using rule 18 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 18 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 18 (expression -> MINUS expression .)
    COMMA           reduce using rule 18 (expression -> MINUS expression .)
    LPAREN          reduce using rule 18 (expression -> MINUS expression .)
    NOT             reduce using rule 18 (expression -> MINUS expression .)
    NAME            reduce using rule 18 (expression -> MINUS expression .)
    REAL            reduce using rule 18 (expression -> MINUS expression .)
    INTEGER         reduce using rule 18 (expression -> MINUS expression .)
    STRING          reduce using rule 18 (expression -> MINUS expression .)
    HASH            reduce using rule 18 (expression -> MINUS expression .)
    TRUE            reduce using rule 18 (expression -> MINUS expression .)
    FALSE           reduce using rule 18 (expression -> MINUS expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 64

    (36) expression -> NOT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 36 (expression -> NOT expression .)
    AND             reduce using rule 36 (expression -> NOT expression .)
    OR              reduce using rule 36 (expression -> NOT expression .)
    LBRACKET        reduce using rule 36 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 36 (expression -> NOT expression .)
    RBRACKET        reduce using rule 36 (expression -> NOT expression .)
    COMMA           reduce using rule 36 (expression -> NOT expression .)
    LPAREN          reduce using rule 36 (expression -> NOT expression .)
    NOT             reduce using rule 36 (expression -> NOT expression .)
    NAME            reduce using rule 36 (expression -> NOT expression .)
    REAL            reduce using rule 36 (expression -> NOT expression .)
    INTEGER         reduce using rule 36 (expression -> NOT expression .)
    STRING          reduce using rule 36 (expression -> NOT expression .)
    HASH            reduce using rule 36 (expression -> NOT expression .)
    TRUE            reduce using rule 36 (expression -> NOT expression .)
    FALSE           reduce using rule 36 (expression -> NOT expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 36 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 36 (expression -> NOT expression .) ]
  ! LTE             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 36 (expression -> NOT expression .) ]
  ! GTE             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 36 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 36 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! CONS            [ reduce using rule 36 (expression -> NOT expression .) ]
  ! EXP             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 65

    (55) list_construction -> LBRACKET expression . list_tail
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET
    (57) list_tail -> . COMMA expression list_tail
    (58) list_tail -> . RBRACKET

    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62
    COMMA           shift and go to state 96
    RBRACKET        shift and go to state 95

    list_tail                      shift and go to state 94

state 66

    (56) list_construction -> LBRACKET RBRACKET .

    RPAREN          reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    LT              reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    LTE             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    GT              reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    GTE             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    EQ              reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    NOTEQ           reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    AND             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    OR              reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    IN              reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    DIV             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    MOD             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    CONS            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    EXP             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    NOT             reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    NAME            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    REAL            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    INTEGER         reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    STRING          reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    HASH            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 56 (list_construction -> LBRACKET RBRACKET .)


state 67

    (46) hash_expression -> HASH expression . expression
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    PLUS            shift and go to state 45
    MINUS           shift and go to state 98
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 99
    LPAREN          shift and go to state 18
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 97
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 68

    (7) statement -> WHILE LPAREN expression RPAREN . block
    (9) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 9

    block                          shift and go to state 100

state 69

    (10) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 101


state 70

    (11) statement -> NAME ASSIGN expression SEMICOLON .

    IF              reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 11 (statement -> NAME ASSIGN expression SEMICOLON .)


state 71

    (12) statement -> NAME assign_index ASSIGN expression . SEMICOLON
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 102
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 72

    (13) assign_index -> LBRACKET expression RBRACKET . assign_index_list
    (14) assign_index_list -> . LBRACKET expression RBRACKET assign_index_list
    (15) assign_index_list -> .

    LBRACKET        shift and go to state 103
    ASSIGN          reduce using rule 15 (assign_index_list -> .)

    assign_index_list              shift and go to state 104

state 73

    (16) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    CONS            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    REAL            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    HASH            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 16 (expression -> LPAREN expression RPAREN .)


state 74

    (47) tuple_construction -> LPAREN expression COMMA . tuple_tail
    (49) tuple_tail -> . expression COMMA tuple_tail
    (50) tuple_tail -> . expression RPAREN
    (51) tuple_tail -> . RPAREN
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    RPAREN          shift and go to state 107
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 105
    tuple_tail                     shift and go to state 106
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 75

    (4) statement -> IF LPAREN expression RPAREN block . else_clause
    (5) else_clause -> . ELSE block
    (6) else_clause -> .

    ELSE            shift and go to state 109
    IF              reduce using rule 6 (else_clause -> .)
    WHILE           reduce using rule 6 (else_clause -> .)
    PRINT           reduce using rule 6 (else_clause -> .)
    NAME            reduce using rule 6 (else_clause -> .)
    LBRACE          reduce using rule 6 (else_clause -> .)
    $end            reduce using rule 6 (else_clause -> .)
    RBRACE          reduce using rule 6 (else_clause -> .)

    else_clause                    shift and go to state 108

state 76

    (19) expression -> expression PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 19 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 19 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 19 (expression -> expression PLUS expression .)
    LT              reduce using rule 19 (expression -> expression PLUS expression .)
    LTE             reduce using rule 19 (expression -> expression PLUS expression .)
    GT              reduce using rule 19 (expression -> expression PLUS expression .)
    GTE             reduce using rule 19 (expression -> expression PLUS expression .)
    EQ              reduce using rule 19 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 19 (expression -> expression PLUS expression .)
    AND             reduce using rule 19 (expression -> expression PLUS expression .)
    OR              reduce using rule 19 (expression -> expression PLUS expression .)
    IN              reduce using rule 19 (expression -> expression PLUS expression .)
    CONS            reduce using rule 19 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 19 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 19 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 19 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 19 (expression -> expression PLUS expression .)
    NOT             reduce using rule 19 (expression -> expression PLUS expression .)
    NAME            reduce using rule 19 (expression -> expression PLUS expression .)
    REAL            reduce using rule 19 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 19 (expression -> expression PLUS expression .)
    STRING          reduce using rule 19 (expression -> expression PLUS expression .)
    HASH            reduce using rule 19 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 19 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 19 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    EXP             shift and go to state 61

  ! TIMES           [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 77

    (20) expression -> expression MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 20 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 20 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 20 (expression -> expression MINUS expression .)
    LT              reduce using rule 20 (expression -> expression MINUS expression .)
    LTE             reduce using rule 20 (expression -> expression MINUS expression .)
    GT              reduce using rule 20 (expression -> expression MINUS expression .)
    GTE             reduce using rule 20 (expression -> expression MINUS expression .)
    EQ              reduce using rule 20 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 20 (expression -> expression MINUS expression .)
    AND             reduce using rule 20 (expression -> expression MINUS expression .)
    OR              reduce using rule 20 (expression -> expression MINUS expression .)
    IN              reduce using rule 20 (expression -> expression MINUS expression .)
    CONS            reduce using rule 20 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 20 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 20 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 20 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 20 (expression -> expression MINUS expression .)
    NOT             reduce using rule 20 (expression -> expression MINUS expression .)
    NAME            reduce using rule 20 (expression -> expression MINUS expression .)
    REAL            reduce using rule 20 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 20 (expression -> expression MINUS expression .)
    STRING          reduce using rule 20 (expression -> expression MINUS expression .)
    HASH            reduce using rule 20 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 20 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 20 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    EXP             shift and go to state 61

  ! TIMES           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 78

    (21) expression -> expression TIMES expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 21 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 21 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 21 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 21 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 21 (expression -> expression TIMES expression .)
    LT              reduce using rule 21 (expression -> expression TIMES expression .)
    LTE             reduce using rule 21 (expression -> expression TIMES expression .)
    GT              reduce using rule 21 (expression -> expression TIMES expression .)
    GTE             reduce using rule 21 (expression -> expression TIMES expression .)
    EQ              reduce using rule 21 (expression -> expression TIMES expression .)
    NOTEQ           reduce using rule 21 (expression -> expression TIMES expression .)
    AND             reduce using rule 21 (expression -> expression TIMES expression .)
    OR              reduce using rule 21 (expression -> expression TIMES expression .)
    IN              reduce using rule 21 (expression -> expression TIMES expression .)
    DIV             reduce using rule 21 (expression -> expression TIMES expression .)
    MOD             reduce using rule 21 (expression -> expression TIMES expression .)
    CONS            reduce using rule 21 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 21 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 21 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 21 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 21 (expression -> expression TIMES expression .)
    NOT             reduce using rule 21 (expression -> expression TIMES expression .)
    NAME            reduce using rule 21 (expression -> expression TIMES expression .)
    REAL            reduce using rule 21 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 21 (expression -> expression TIMES expression .)
    STRING          reduce using rule 21 (expression -> expression TIMES expression .)
    HASH            reduce using rule 21 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 21 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 21 (expression -> expression TIMES expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 79

    (22) expression -> expression DIVIDE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 22 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 22 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 22 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 22 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 22 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 22 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 22 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 22 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 22 (expression -> expression DIVIDE expression .)
    DIV             reduce using rule 22 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 22 (expression -> expression DIVIDE expression .)
    CONS            reduce using rule 22 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 22 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 22 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 22 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 22 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 22 (expression -> expression DIVIDE expression .)
    REAL            reduce using rule 22 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 22 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 22 (expression -> expression DIVIDE expression .)
    HASH            reduce using rule 22 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 22 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 22 (expression -> expression DIVIDE expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 80

    (23) expression -> expression LT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 23 (expression -> expression LT expression .)
    LT              reduce using rule 23 (expression -> expression LT expression .)
    LTE             reduce using rule 23 (expression -> expression LT expression .)
    GT              reduce using rule 23 (expression -> expression LT expression .)
    GTE             reduce using rule 23 (expression -> expression LT expression .)
    EQ              reduce using rule 23 (expression -> expression LT expression .)
    NOTEQ           reduce using rule 23 (expression -> expression LT expression .)
    AND             reduce using rule 23 (expression -> expression LT expression .)
    OR              reduce using rule 23 (expression -> expression LT expression .)
    LBRACKET        reduce using rule 23 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 23 (expression -> expression LT expression .)
    COMMA           reduce using rule 23 (expression -> expression LT expression .)
    LPAREN          reduce using rule 23 (expression -> expression LT expression .)
    NOT             reduce using rule 23 (expression -> expression LT expression .)
    NAME            reduce using rule 23 (expression -> expression LT expression .)
    REAL            reduce using rule 23 (expression -> expression LT expression .)
    INTEGER         reduce using rule 23 (expression -> expression LT expression .)
    STRING          reduce using rule 23 (expression -> expression LT expression .)
    HASH            reduce using rule 23 (expression -> expression LT expression .)
    TRUE            reduce using rule 23 (expression -> expression LT expression .)
    FALSE           reduce using rule 23 (expression -> expression LT expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! IN              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! CONS            [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! EXP             [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 81

    (24) expression -> expression LTE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 24 (expression -> expression LTE expression .)
    LT              reduce using rule 24 (expression -> expression LTE expression .)
    LTE             reduce using rule 24 (expression -> expression LTE expression .)
    GT              reduce using rule 24 (expression -> expression LTE expression .)
    GTE             reduce using rule 24 (expression -> expression LTE expression .)
    EQ              reduce using rule 24 (expression -> expression LTE expression .)
    NOTEQ           reduce using rule 24 (expression -> expression LTE expression .)
    AND             reduce using rule 24 (expression -> expression LTE expression .)
    OR              reduce using rule 24 (expression -> expression LTE expression .)
    LBRACKET        reduce using rule 24 (expression -> expression LTE expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression LTE expression .)
    RBRACKET        reduce using rule 24 (expression -> expression LTE expression .)
    COMMA           reduce using rule 24 (expression -> expression LTE expression .)
    LPAREN          reduce using rule 24 (expression -> expression LTE expression .)
    NOT             reduce using rule 24 (expression -> expression LTE expression .)
    NAME            reduce using rule 24 (expression -> expression LTE expression .)
    REAL            reduce using rule 24 (expression -> expression LTE expression .)
    INTEGER         reduce using rule 24 (expression -> expression LTE expression .)
    STRING          reduce using rule 24 (expression -> expression LTE expression .)
    HASH            reduce using rule 24 (expression -> expression LTE expression .)
    TRUE            reduce using rule 24 (expression -> expression LTE expression .)
    FALSE           reduce using rule 24 (expression -> expression LTE expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! IN              [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! CONS            [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! EXP             [ reduce using rule 24 (expression -> expression LTE expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 82

    (25) expression -> expression GT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 25 (expression -> expression GT expression .)
    LT              reduce using rule 25 (expression -> expression GT expression .)
    LTE             reduce using rule 25 (expression -> expression GT expression .)
    GT              reduce using rule 25 (expression -> expression GT expression .)
    GTE             reduce using rule 25 (expression -> expression GT expression .)
    EQ              reduce using rule 25 (expression -> expression GT expression .)
    NOTEQ           reduce using rule 25 (expression -> expression GT expression .)
    AND             reduce using rule 25 (expression -> expression GT expression .)
    OR              reduce using rule 25 (expression -> expression GT expression .)
    LBRACKET        reduce using rule 25 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 25 (expression -> expression GT expression .)
    COMMA           reduce using rule 25 (expression -> expression GT expression .)
    LPAREN          reduce using rule 25 (expression -> expression GT expression .)
    NOT             reduce using rule 25 (expression -> expression GT expression .)
    NAME            reduce using rule 25 (expression -> expression GT expression .)
    REAL            reduce using rule 25 (expression -> expression GT expression .)
    INTEGER         reduce using rule 25 (expression -> expression GT expression .)
    STRING          reduce using rule 25 (expression -> expression GT expression .)
    HASH            reduce using rule 25 (expression -> expression GT expression .)
    TRUE            reduce using rule 25 (expression -> expression GT expression .)
    FALSE           reduce using rule 25 (expression -> expression GT expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! IN              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! CONS            [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! EXP             [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 83

    (26) expression -> expression GTE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 26 (expression -> expression GTE expression .)
    LT              reduce using rule 26 (expression -> expression GTE expression .)
    LTE             reduce using rule 26 (expression -> expression GTE expression .)
    GT              reduce using rule 26 (expression -> expression GTE expression .)
    GTE             reduce using rule 26 (expression -> expression GTE expression .)
    EQ              reduce using rule 26 (expression -> expression GTE expression .)
    NOTEQ           reduce using rule 26 (expression -> expression GTE expression .)
    AND             reduce using rule 26 (expression -> expression GTE expression .)
    OR              reduce using rule 26 (expression -> expression GTE expression .)
    LBRACKET        reduce using rule 26 (expression -> expression GTE expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression GTE expression .)
    RBRACKET        reduce using rule 26 (expression -> expression GTE expression .)
    COMMA           reduce using rule 26 (expression -> expression GTE expression .)
    LPAREN          reduce using rule 26 (expression -> expression GTE expression .)
    NOT             reduce using rule 26 (expression -> expression GTE expression .)
    NAME            reduce using rule 26 (expression -> expression GTE expression .)
    REAL            reduce using rule 26 (expression -> expression GTE expression .)
    INTEGER         reduce using rule 26 (expression -> expression GTE expression .)
    STRING          reduce using rule 26 (expression -> expression GTE expression .)
    HASH            reduce using rule 26 (expression -> expression GTE expression .)
    TRUE            reduce using rule 26 (expression -> expression GTE expression .)
    FALSE           reduce using rule 26 (expression -> expression GTE expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! IN              [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! DIV             [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! CONS            [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! EXP             [ reduce using rule 26 (expression -> expression GTE expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 84

    (27) expression -> expression EQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 27 (expression -> expression EQ expression .)
    LT              reduce using rule 27 (expression -> expression EQ expression .)
    LTE             reduce using rule 27 (expression -> expression EQ expression .)
    GT              reduce using rule 27 (expression -> expression EQ expression .)
    GTE             reduce using rule 27 (expression -> expression EQ expression .)
    EQ              reduce using rule 27 (expression -> expression EQ expression .)
    NOTEQ           reduce using rule 27 (expression -> expression EQ expression .)
    AND             reduce using rule 27 (expression -> expression EQ expression .)
    OR              reduce using rule 27 (expression -> expression EQ expression .)
    LBRACKET        reduce using rule 27 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 27 (expression -> expression EQ expression .)
    COMMA           reduce using rule 27 (expression -> expression EQ expression .)
    LPAREN          reduce using rule 27 (expression -> expression EQ expression .)
    NOT             reduce using rule 27 (expression -> expression EQ expression .)
    NAME            reduce using rule 27 (expression -> expression EQ expression .)
    REAL            reduce using rule 27 (expression -> expression EQ expression .)
    INTEGER         reduce using rule 27 (expression -> expression EQ expression .)
    STRING          reduce using rule 27 (expression -> expression EQ expression .)
    HASH            reduce using rule 27 (expression -> expression EQ expression .)
    TRUE            reduce using rule 27 (expression -> expression EQ expression .)
    FALSE           reduce using rule 27 (expression -> expression EQ expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! IN              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! CONS            [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! EXP             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 85

    (28) expression -> expression NOTEQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 28 (expression -> expression NOTEQ expression .)
    LT              reduce using rule 28 (expression -> expression NOTEQ expression .)
    LTE             reduce using rule 28 (expression -> expression NOTEQ expression .)
    GT              reduce using rule 28 (expression -> expression NOTEQ expression .)
    GTE             reduce using rule 28 (expression -> expression NOTEQ expression .)
    EQ              reduce using rule 28 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 28 (expression -> expression NOTEQ expression .)
    AND             reduce using rule 28 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 28 (expression -> expression NOTEQ expression .)
    LBRACKET        reduce using rule 28 (expression -> expression NOTEQ expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression NOTEQ expression .)
    RBRACKET        reduce using rule 28 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 28 (expression -> expression NOTEQ expression .)
    LPAREN          reduce using rule 28 (expression -> expression NOTEQ expression .)
    NOT             reduce using rule 28 (expression -> expression NOTEQ expression .)
    NAME            reduce using rule 28 (expression -> expression NOTEQ expression .)
    REAL            reduce using rule 28 (expression -> expression NOTEQ expression .)
    INTEGER         reduce using rule 28 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 28 (expression -> expression NOTEQ expression .)
    HASH            reduce using rule 28 (expression -> expression NOTEQ expression .)
    TRUE            reduce using rule 28 (expression -> expression NOTEQ expression .)
    FALSE           reduce using rule 28 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! IN              [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! DIV             [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! CONS            [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! EXP             [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 86

    (29) expression -> expression AND expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    AND             reduce using rule 29 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 29 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    LPAREN          reduce using rule 29 (expression -> expression AND expression .)
    NOT             reduce using rule 29 (expression -> expression AND expression .)
    NAME            reduce using rule 29 (expression -> expression AND expression .)
    REAL            reduce using rule 29 (expression -> expression AND expression .)
    INTEGER         reduce using rule 29 (expression -> expression AND expression .)
    STRING          reduce using rule 29 (expression -> expression AND expression .)
    HASH            reduce using rule 29 (expression -> expression AND expression .)
    TRUE            reduce using rule 29 (expression -> expression AND expression .)
    FALSE           reduce using rule 29 (expression -> expression AND expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! CONS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! EXP             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 87

    (30) expression -> expression OR expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 30 (expression -> expression OR expression .)
    AND             reduce using rule 30 (expression -> expression OR expression .)
    OR              reduce using rule 30 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 30 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 30 (expression -> expression OR expression .)
    COMMA           reduce using rule 30 (expression -> expression OR expression .)
    LPAREN          reduce using rule 30 (expression -> expression OR expression .)
    NOT             reduce using rule 30 (expression -> expression OR expression .)
    NAME            reduce using rule 30 (expression -> expression OR expression .)
    REAL            reduce using rule 30 (expression -> expression OR expression .)
    INTEGER         reduce using rule 30 (expression -> expression OR expression .)
    STRING          reduce using rule 30 (expression -> expression OR expression .)
    HASH            reduce using rule 30 (expression -> expression OR expression .)
    TRUE            reduce using rule 30 (expression -> expression OR expression .)
    FALSE           reduce using rule 30 (expression -> expression OR expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! CONS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! EXP             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 88

    (31) expression -> expression IN expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 31 (expression -> expression IN expression .)
    LT              reduce using rule 31 (expression -> expression IN expression .)
    LTE             reduce using rule 31 (expression -> expression IN expression .)
    GT              reduce using rule 31 (expression -> expression IN expression .)
    GTE             reduce using rule 31 (expression -> expression IN expression .)
    EQ              reduce using rule 31 (expression -> expression IN expression .)
    NOTEQ           reduce using rule 31 (expression -> expression IN expression .)
    AND             reduce using rule 31 (expression -> expression IN expression .)
    OR              reduce using rule 31 (expression -> expression IN expression .)
    IN              reduce using rule 31 (expression -> expression IN expression .)
    CONS            reduce using rule 31 (expression -> expression IN expression .)
    LBRACKET        reduce using rule 31 (expression -> expression IN expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression IN expression .)
    RBRACKET        reduce using rule 31 (expression -> expression IN expression .)
    COMMA           reduce using rule 31 (expression -> expression IN expression .)
    LPAREN          reduce using rule 31 (expression -> expression IN expression .)
    NOT             reduce using rule 31 (expression -> expression IN expression .)
    NAME            reduce using rule 31 (expression -> expression IN expression .)
    REAL            reduce using rule 31 (expression -> expression IN expression .)
    INTEGER         reduce using rule 31 (expression -> expression IN expression .)
    STRING          reduce using rule 31 (expression -> expression IN expression .)
    HASH            reduce using rule 31 (expression -> expression IN expression .)
    TRUE            reduce using rule 31 (expression -> expression IN expression .)
    FALSE           reduce using rule 31 (expression -> expression IN expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! EXP             [ reduce using rule 31 (expression -> expression IN expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 89

    (32) expression -> expression DIV expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 32 (expression -> expression DIV expression .)
    PLUS            reduce using rule 32 (expression -> expression DIV expression .)
    MINUS           reduce using rule 32 (expression -> expression DIV expression .)
    TIMES           reduce using rule 32 (expression -> expression DIV expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIV expression .)
    LT              reduce using rule 32 (expression -> expression DIV expression .)
    LTE             reduce using rule 32 (expression -> expression DIV expression .)
    GT              reduce using rule 32 (expression -> expression DIV expression .)
    GTE             reduce using rule 32 (expression -> expression DIV expression .)
    EQ              reduce using rule 32 (expression -> expression DIV expression .)
    NOTEQ           reduce using rule 32 (expression -> expression DIV expression .)
    AND             reduce using rule 32 (expression -> expression DIV expression .)
    OR              reduce using rule 32 (expression -> expression DIV expression .)
    IN              reduce using rule 32 (expression -> expression DIV expression .)
    DIV             reduce using rule 32 (expression -> expression DIV expression .)
    MOD             reduce using rule 32 (expression -> expression DIV expression .)
    CONS            reduce using rule 32 (expression -> expression DIV expression .)
    LBRACKET        reduce using rule 32 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 32 (expression -> expression DIV expression .)
    COMMA           reduce using rule 32 (expression -> expression DIV expression .)
    LPAREN          reduce using rule 32 (expression -> expression DIV expression .)
    NOT             reduce using rule 32 (expression -> expression DIV expression .)
    NAME            reduce using rule 32 (expression -> expression DIV expression .)
    REAL            reduce using rule 32 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 32 (expression -> expression DIV expression .)
    STRING          reduce using rule 32 (expression -> expression DIV expression .)
    HASH            reduce using rule 32 (expression -> expression DIV expression .)
    TRUE            reduce using rule 32 (expression -> expression DIV expression .)
    FALSE           reduce using rule 32 (expression -> expression DIV expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 32 (expression -> expression DIV expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 90

    (33) expression -> expression MOD expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 33 (expression -> expression MOD expression .)
    PLUS            reduce using rule 33 (expression -> expression MOD expression .)
    MINUS           reduce using rule 33 (expression -> expression MOD expression .)
    TIMES           reduce using rule 33 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 33 (expression -> expression MOD expression .)
    LT              reduce using rule 33 (expression -> expression MOD expression .)
    LTE             reduce using rule 33 (expression -> expression MOD expression .)
    GT              reduce using rule 33 (expression -> expression MOD expression .)
    GTE             reduce using rule 33 (expression -> expression MOD expression .)
    EQ              reduce using rule 33 (expression -> expression MOD expression .)
    NOTEQ           reduce using rule 33 (expression -> expression MOD expression .)
    AND             reduce using rule 33 (expression -> expression MOD expression .)
    OR              reduce using rule 33 (expression -> expression MOD expression .)
    IN              reduce using rule 33 (expression -> expression MOD expression .)
    DIV             reduce using rule 33 (expression -> expression MOD expression .)
    MOD             reduce using rule 33 (expression -> expression MOD expression .)
    CONS            reduce using rule 33 (expression -> expression MOD expression .)
    LBRACKET        reduce using rule 33 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 33 (expression -> expression MOD expression .)
    COMMA           reduce using rule 33 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 33 (expression -> expression MOD expression .)
    NOT             reduce using rule 33 (expression -> expression MOD expression .)
    NAME            reduce using rule 33 (expression -> expression MOD expression .)
    REAL            reduce using rule 33 (expression -> expression MOD expression .)
    INTEGER         reduce using rule 33 (expression -> expression MOD expression .)
    STRING          reduce using rule 33 (expression -> expression MOD expression .)
    HASH            reduce using rule 33 (expression -> expression MOD expression .)
    TRUE            reduce using rule 33 (expression -> expression MOD expression .)
    FALSE           reduce using rule 33 (expression -> expression MOD expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 91

    (34) expression -> expression CONS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 34 (expression -> expression CONS expression .)
    LT              reduce using rule 34 (expression -> expression CONS expression .)
    LTE             reduce using rule 34 (expression -> expression CONS expression .)
    GT              reduce using rule 34 (expression -> expression CONS expression .)
    GTE             reduce using rule 34 (expression -> expression CONS expression .)
    EQ              reduce using rule 34 (expression -> expression CONS expression .)
    NOTEQ           reduce using rule 34 (expression -> expression CONS expression .)
    AND             reduce using rule 34 (expression -> expression CONS expression .)
    OR              reduce using rule 34 (expression -> expression CONS expression .)
    LBRACKET        reduce using rule 34 (expression -> expression CONS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression CONS expression .)
    RBRACKET        reduce using rule 34 (expression -> expression CONS expression .)
    COMMA           reduce using rule 34 (expression -> expression CONS expression .)
    LPAREN          reduce using rule 34 (expression -> expression CONS expression .)
    NOT             reduce using rule 34 (expression -> expression CONS expression .)
    NAME            reduce using rule 34 (expression -> expression CONS expression .)
    REAL            reduce using rule 34 (expression -> expression CONS expression .)
    INTEGER         reduce using rule 34 (expression -> expression CONS expression .)
    STRING          reduce using rule 34 (expression -> expression CONS expression .)
    HASH            reduce using rule 34 (expression -> expression CONS expression .)
    TRUE            reduce using rule 34 (expression -> expression CONS expression .)
    FALSE           reduce using rule 34 (expression -> expression CONS expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! IN              [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! CONS            [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! EXP             [ reduce using rule 34 (expression -> expression CONS expression .) ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 92

    (35) expression -> expression EXP expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 35 (expression -> expression EXP expression .)
    PLUS            reduce using rule 35 (expression -> expression EXP expression .)
    MINUS           reduce using rule 35 (expression -> expression EXP expression .)
    TIMES           reduce using rule 35 (expression -> expression EXP expression .)
    DIVIDE          reduce using rule 35 (expression -> expression EXP expression .)
    LT              reduce using rule 35 (expression -> expression EXP expression .)
    LTE             reduce using rule 35 (expression -> expression EXP expression .)
    GT              reduce using rule 35 (expression -> expression EXP expression .)
    GTE             reduce using rule 35 (expression -> expression EXP expression .)
    EQ              reduce using rule 35 (expression -> expression EXP expression .)
    NOTEQ           reduce using rule 35 (expression -> expression EXP expression .)
    AND             reduce using rule 35 (expression -> expression EXP expression .)
    OR              reduce using rule 35 (expression -> expression EXP expression .)
    IN              reduce using rule 35 (expression -> expression EXP expression .)
    DIV             reduce using rule 35 (expression -> expression EXP expression .)
    MOD             reduce using rule 35 (expression -> expression EXP expression .)
    CONS            reduce using rule 35 (expression -> expression EXP expression .)
    LBRACKET        reduce using rule 35 (expression -> expression EXP expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression EXP expression .)
    RBRACKET        reduce using rule 35 (expression -> expression EXP expression .)
    COMMA           reduce using rule 35 (expression -> expression EXP expression .)
    LPAREN          reduce using rule 35 (expression -> expression EXP expression .)
    NOT             reduce using rule 35 (expression -> expression EXP expression .)
    NAME            reduce using rule 35 (expression -> expression EXP expression .)
    REAL            reduce using rule 35 (expression -> expression EXP expression .)
    INTEGER         reduce using rule 35 (expression -> expression EXP expression .)
    STRING          reduce using rule 35 (expression -> expression EXP expression .)
    HASH            reduce using rule 35 (expression -> expression EXP expression .)
    TRUE            reduce using rule 35 (expression -> expression EXP expression .)
    FALSE           reduce using rule 35 (expression -> expression EXP expression .)
    EXP             shift and go to state 61

  ! EXP             [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 93

    (52) index_expression -> expression LBRACKET expression . RBRACKET
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 110
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 94

    (55) list_construction -> LBRACKET expression list_tail .

    RPAREN          reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    PLUS            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    MINUS           reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    TIMES           reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    DIVIDE          reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    LT              reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    LTE             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    GT              reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    GTE             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    EQ              reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    NOTEQ           reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    AND             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    OR              reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    IN              reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    DIV             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    MOD             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    CONS            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    EXP             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    LBRACKET        reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    SEMICOLON       reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    RBRACKET        reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    COMMA           reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    LPAREN          reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    NOT             reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    NAME            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    REAL            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    INTEGER         reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    STRING          reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    HASH            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    TRUE            reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)
    FALSE           reduce using rule 55 (list_construction -> LBRACKET expression list_tail .)


state 95

    (58) list_tail -> RBRACKET .

    RPAREN          reduce using rule 58 (list_tail -> RBRACKET .)
    PLUS            reduce using rule 58 (list_tail -> RBRACKET .)
    MINUS           reduce using rule 58 (list_tail -> RBRACKET .)
    TIMES           reduce using rule 58 (list_tail -> RBRACKET .)
    DIVIDE          reduce using rule 58 (list_tail -> RBRACKET .)
    LT              reduce using rule 58 (list_tail -> RBRACKET .)
    LTE             reduce using rule 58 (list_tail -> RBRACKET .)
    GT              reduce using rule 58 (list_tail -> RBRACKET .)
    GTE             reduce using rule 58 (list_tail -> RBRACKET .)
    EQ              reduce using rule 58 (list_tail -> RBRACKET .)
    NOTEQ           reduce using rule 58 (list_tail -> RBRACKET .)
    AND             reduce using rule 58 (list_tail -> RBRACKET .)
    OR              reduce using rule 58 (list_tail -> RBRACKET .)
    IN              reduce using rule 58 (list_tail -> RBRACKET .)
    DIV             reduce using rule 58 (list_tail -> RBRACKET .)
    MOD             reduce using rule 58 (list_tail -> RBRACKET .)
    CONS            reduce using rule 58 (list_tail -> RBRACKET .)
    EXP             reduce using rule 58 (list_tail -> RBRACKET .)
    LBRACKET        reduce using rule 58 (list_tail -> RBRACKET .)
    SEMICOLON       reduce using rule 58 (list_tail -> RBRACKET .)
    RBRACKET        reduce using rule 58 (list_tail -> RBRACKET .)
    COMMA           reduce using rule 58 (list_tail -> RBRACKET .)
    LPAREN          reduce using rule 58 (list_tail -> RBRACKET .)
    NOT             reduce using rule 58 (list_tail -> RBRACKET .)
    NAME            reduce using rule 58 (list_tail -> RBRACKET .)
    REAL            reduce using rule 58 (list_tail -> RBRACKET .)
    INTEGER         reduce using rule 58 (list_tail -> RBRACKET .)
    STRING          reduce using rule 58 (list_tail -> RBRACKET .)
    HASH            reduce using rule 58 (list_tail -> RBRACKET .)
    TRUE            reduce using rule 58 (list_tail -> RBRACKET .)
    FALSE           reduce using rule 58 (list_tail -> RBRACKET .)


state 96

    (57) list_tail -> COMMA . expression list_tail
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 111
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 97

    (46) hash_expression -> HASH expression expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for CONS resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    RPAREN          reduce using rule 46 (hash_expression -> HASH expression expression .)
    SEMICOLON       reduce using rule 46 (hash_expression -> HASH expression expression .)
    RBRACKET        reduce using rule 46 (hash_expression -> HASH expression expression .)
    COMMA           reduce using rule 46 (hash_expression -> HASH expression expression .)
    LPAREN          reduce using rule 46 (hash_expression -> HASH expression expression .)
    NOT             reduce using rule 46 (hash_expression -> HASH expression expression .)
    NAME            reduce using rule 46 (hash_expression -> HASH expression expression .)
    REAL            reduce using rule 46 (hash_expression -> HASH expression expression .)
    INTEGER         reduce using rule 46 (hash_expression -> HASH expression expression .)
    STRING          reduce using rule 46 (hash_expression -> HASH expression expression .)
    HASH            reduce using rule 46 (hash_expression -> HASH expression expression .)
    TRUE            reduce using rule 46 (hash_expression -> HASH expression expression .)
    FALSE           reduce using rule 46 (hash_expression -> HASH expression expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62

  ! PLUS            [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! MINUS           [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! TIMES           [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! DIVIDE          [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! LT              [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! LTE             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! GT              [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! GTE             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! EQ              [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! NOTEQ           [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! AND             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! OR              [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! IN              [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! DIV             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! MOD             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! CONS            [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! EXP             [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]
  ! LBRACKET        [ reduce using rule 46 (hash_expression -> HASH expression expression .) ]


state 98

    (20) expression -> expression MINUS . expression
    (18) expression -> MINUS . expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 112
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 99

    (52) index_expression -> expression LBRACKET . expression RBRACKET
    (55) list_construction -> LBRACKET . expression list_tail
    (56) list_construction -> LBRACKET . RBRACKET
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    RBRACKET        shift and go to state 66
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 113
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 100

    (7) statement -> WHILE LPAREN expression RPAREN block .

    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    NAME            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    LBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN block .)


state 101

    (10) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    IF              reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NAME            reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 102

    (12) statement -> NAME assign_index ASSIGN expression SEMICOLON .

    IF              reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 12 (statement -> NAME assign_index ASSIGN expression SEMICOLON .)


state 103

    (14) assign_index_list -> LBRACKET . expression RBRACKET assign_index_list
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 114
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 104

    (13) assign_index -> LBRACKET expression RBRACKET assign_index_list .

    ASSIGN          reduce using rule 13 (assign_index -> LBRACKET expression RBRACKET assign_index_list .)


state 105

    (49) tuple_tail -> expression . COMMA tuple_tail
    (50) tuple_tail -> expression . RPAREN
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    COMMA           shift and go to state 115
    RPAREN          shift and go to state 116
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 106

    (47) tuple_construction -> LPAREN expression COMMA tuple_tail .

    RPAREN          reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    PLUS            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    MINUS           reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    TIMES           reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    DIVIDE          reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    LT              reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    LTE             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    GT              reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    GTE             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    EQ              reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    NOTEQ           reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    AND             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    OR              reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    IN              reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    DIV             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    MOD             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    CONS            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    EXP             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    LBRACKET        reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    SEMICOLON       reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    RBRACKET        reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    COMMA           reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    LPAREN          reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    NOT             reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    NAME            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    REAL            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    INTEGER         reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    STRING          reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    HASH            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    TRUE            reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)
    FALSE           reduce using rule 47 (tuple_construction -> LPAREN expression COMMA tuple_tail .)


state 107

    (51) tuple_tail -> RPAREN .

    RPAREN          reduce using rule 51 (tuple_tail -> RPAREN .)
    PLUS            reduce using rule 51 (tuple_tail -> RPAREN .)
    MINUS           reduce using rule 51 (tuple_tail -> RPAREN .)
    TIMES           reduce using rule 51 (tuple_tail -> RPAREN .)
    DIVIDE          reduce using rule 51 (tuple_tail -> RPAREN .)
    LT              reduce using rule 51 (tuple_tail -> RPAREN .)
    LTE             reduce using rule 51 (tuple_tail -> RPAREN .)
    GT              reduce using rule 51 (tuple_tail -> RPAREN .)
    GTE             reduce using rule 51 (tuple_tail -> RPAREN .)
    EQ              reduce using rule 51 (tuple_tail -> RPAREN .)
    NOTEQ           reduce using rule 51 (tuple_tail -> RPAREN .)
    AND             reduce using rule 51 (tuple_tail -> RPAREN .)
    OR              reduce using rule 51 (tuple_tail -> RPAREN .)
    IN              reduce using rule 51 (tuple_tail -> RPAREN .)
    DIV             reduce using rule 51 (tuple_tail -> RPAREN .)
    MOD             reduce using rule 51 (tuple_tail -> RPAREN .)
    CONS            reduce using rule 51 (tuple_tail -> RPAREN .)
    EXP             reduce using rule 51 (tuple_tail -> RPAREN .)
    LBRACKET        reduce using rule 51 (tuple_tail -> RPAREN .)
    SEMICOLON       reduce using rule 51 (tuple_tail -> RPAREN .)
    RBRACKET        reduce using rule 51 (tuple_tail -> RPAREN .)
    COMMA           reduce using rule 51 (tuple_tail -> RPAREN .)
    LPAREN          reduce using rule 51 (tuple_tail -> RPAREN .)
    NOT             reduce using rule 51 (tuple_tail -> RPAREN .)
    NAME            reduce using rule 51 (tuple_tail -> RPAREN .)
    REAL            reduce using rule 51 (tuple_tail -> RPAREN .)
    INTEGER         reduce using rule 51 (tuple_tail -> RPAREN .)
    STRING          reduce using rule 51 (tuple_tail -> RPAREN .)
    HASH            reduce using rule 51 (tuple_tail -> RPAREN .)
    TRUE            reduce using rule 51 (tuple_tail -> RPAREN .)
    FALSE           reduce using rule 51 (tuple_tail -> RPAREN .)


state 108

    (4) statement -> IF LPAREN expression RPAREN block else_clause .

    IF              reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    NAME            reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    LBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    $end            reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN block else_clause .)


state 109

    (5) else_clause -> ELSE . block
    (9) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 9

    block                          shift and go to state 117

state 110

    (52) index_expression -> expression LBRACKET expression RBRACKET .

    RPAREN          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LTE             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    GTE             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NOTEQ           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    CONS            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    EXP             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NAME            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    REAL            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    INTEGER         reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    STRING          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    HASH            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)


state 111

    (57) list_tail -> COMMA expression . list_tail
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET
    (57) list_tail -> . COMMA expression list_tail
    (58) list_tail -> . RBRACKET

    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62
    COMMA           shift and go to state 96
    RBRACKET        shift and go to state 95

    list_tail                      shift and go to state 118

state 112

    (20) expression -> expression MINUS expression .
    (18) expression -> MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for PLUS resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TIMES resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LT resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LTE resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GT resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GTE resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQ resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IN resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONS resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EXP resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NAME resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for HASH resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 18 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 18 (expression -> MINUS expression .)
    PLUS            reduce using rule 18 (expression -> MINUS expression .)
    MINUS           reduce using rule 18 (expression -> MINUS expression .)
    TIMES           reduce using rule 18 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 18 (expression -> MINUS expression .)
    LT              reduce using rule 18 (expression -> MINUS expression .)
    LTE             reduce using rule 18 (expression -> MINUS expression .)
    GT              reduce using rule 18 (expression -> MINUS expression .)
    GTE             reduce using rule 18 (expression -> MINUS expression .)
    EQ              reduce using rule 18 (expression -> MINUS expression .)
    NOTEQ           reduce using rule 18 (expression -> MINUS expression .)
    AND             reduce using rule 18 (expression -> MINUS expression .)
    OR              reduce using rule 18 (expression -> MINUS expression .)
    IN              reduce using rule 18 (expression -> MINUS expression .)
    DIV             reduce using rule 18 (expression -> MINUS expression .)
    MOD             reduce using rule 18 (expression -> MINUS expression .)
    CONS            reduce using rule 18 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 18 (expression -> MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 18 (expression -> MINUS expression .)
    COMMA           reduce using rule 18 (expression -> MINUS expression .)
    LPAREN          reduce using rule 18 (expression -> MINUS expression .)
    NOT             reduce using rule 18 (expression -> MINUS expression .)
    NAME            reduce using rule 18 (expression -> MINUS expression .)
    REAL            reduce using rule 18 (expression -> MINUS expression .)
    INTEGER         reduce using rule 18 (expression -> MINUS expression .)
    STRING          reduce using rule 18 (expression -> MINUS expression .)
    HASH            reduce using rule 18 (expression -> MINUS expression .)
    TRUE            reduce using rule 18 (expression -> MINUS expression .)
    FALSE           reduce using rule 18 (expression -> MINUS expression .)
    EXP             shift and go to state 61

  ! PLUS            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LTE             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! GTE             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! NOTEQ           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! CONS            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! NAME            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! HASH            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! TRUE            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! FALSE           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTE             [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTE             [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 53 ]
  ! NOTEQ           [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! MOD             [ shift and go to state 59 ]
  ! CONS            [ shift and go to state 60 ]
  ! LBRACKET        [ shift and go to state 62 ]


state 113

    (52) index_expression -> expression LBRACKET expression . RBRACKET
    (55) list_construction -> LBRACKET expression . list_tail
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET
    (57) list_tail -> . COMMA expression list_tail
    (58) list_tail -> . RBRACKET

    RBRACKET        shift and go to state 119
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62
    COMMA           shift and go to state 96

    list_tail                      shift and go to state 94

state 114

    (14) assign_index_list -> LBRACKET expression . RBRACKET assign_index_list
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LTE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GTE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NOTEQ expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . IN expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . CONS expression
    (35) expression -> expression . EXP expression
    (52) index_expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 120
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LT              shift and go to state 49
    LTE             shift and go to state 50
    GT              shift and go to state 51
    GTE             shift and go to state 52
    EQ              shift and go to state 53
    NOTEQ           shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    IN              shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59
    CONS            shift and go to state 60
    EXP             shift and go to state 61
    LBRACKET        shift and go to state 62


state 115

    (49) tuple_tail -> expression COMMA . tuple_tail
    (49) tuple_tail -> . expression COMMA tuple_tail
    (50) tuple_tail -> . expression RPAREN
    (51) tuple_tail -> . RPAREN
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . value
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LTE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GTE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression IN expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression CONS expression
    (35) expression -> . expression EXP expression
    (36) expression -> . NOT expression
    (41) expression -> . NAME
    (42) expression -> . list_construction
    (43) expression -> . index_expression
    (44) expression -> . tuple_construction
    (45) expression -> . hash_expression
    (37) value -> . REAL
    (38) value -> . INTEGER
    (39) value -> . STRING
    (40) value -> . bool
    (55) list_construction -> . LBRACKET expression list_tail
    (56) list_construction -> . LBRACKET RBRACKET
    (52) index_expression -> . expression LBRACKET expression RBRACKET
    (47) tuple_construction -> . LPAREN expression COMMA tuple_tail
    (48) tuple_construction -> . LPAREN RPAREN
    (46) hash_expression -> . HASH expression expression
    (53) bool -> . TRUE
    (54) bool -> . FALSE

    RPAREN          shift and go to state 107
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 21
    NOT             shift and go to state 22
    NAME            shift and go to state 23
    REAL            shift and go to state 28
    INTEGER         shift and go to state 29
    STRING          shift and go to state 30
    LBRACKET        shift and go to state 32
    HASH            shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 105
    tuple_tail                     shift and go to state 121
    value                          shift and go to state 20
    list_construction              shift and go to state 24
    index_expression               shift and go to state 25
    tuple_construction             shift and go to state 26
    hash_expression                shift and go to state 27
    bool                           shift and go to state 31

state 116

    (50) tuple_tail -> expression RPAREN .

    RPAREN          reduce using rule 50 (tuple_tail -> expression RPAREN .)
    PLUS            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    MINUS           reduce using rule 50 (tuple_tail -> expression RPAREN .)
    TIMES           reduce using rule 50 (tuple_tail -> expression RPAREN .)
    DIVIDE          reduce using rule 50 (tuple_tail -> expression RPAREN .)
    LT              reduce using rule 50 (tuple_tail -> expression RPAREN .)
    LTE             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    GT              reduce using rule 50 (tuple_tail -> expression RPAREN .)
    GTE             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    EQ              reduce using rule 50 (tuple_tail -> expression RPAREN .)
    NOTEQ           reduce using rule 50 (tuple_tail -> expression RPAREN .)
    AND             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    OR              reduce using rule 50 (tuple_tail -> expression RPAREN .)
    IN              reduce using rule 50 (tuple_tail -> expression RPAREN .)
    DIV             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    MOD             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    CONS            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    EXP             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    LBRACKET        reduce using rule 50 (tuple_tail -> expression RPAREN .)
    SEMICOLON       reduce using rule 50 (tuple_tail -> expression RPAREN .)
    RBRACKET        reduce using rule 50 (tuple_tail -> expression RPAREN .)
    COMMA           reduce using rule 50 (tuple_tail -> expression RPAREN .)
    LPAREN          reduce using rule 50 (tuple_tail -> expression RPAREN .)
    NOT             reduce using rule 50 (tuple_tail -> expression RPAREN .)
    NAME            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    REAL            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    INTEGER         reduce using rule 50 (tuple_tail -> expression RPAREN .)
    STRING          reduce using rule 50 (tuple_tail -> expression RPAREN .)
    HASH            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    TRUE            reduce using rule 50 (tuple_tail -> expression RPAREN .)
    FALSE           reduce using rule 50 (tuple_tail -> expression RPAREN .)


state 117

    (5) else_clause -> ELSE block .

    IF              reduce using rule 5 (else_clause -> ELSE block .)
    WHILE           reduce using rule 5 (else_clause -> ELSE block .)
    PRINT           reduce using rule 5 (else_clause -> ELSE block .)
    NAME            reduce using rule 5 (else_clause -> ELSE block .)
    LBRACE          reduce using rule 5 (else_clause -> ELSE block .)
    $end            reduce using rule 5 (else_clause -> ELSE block .)
    RBRACE          reduce using rule 5 (else_clause -> ELSE block .)


state 118

    (57) list_tail -> COMMA expression list_tail .

    RPAREN          reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    PLUS            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    MINUS           reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    TIMES           reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    DIVIDE          reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    LT              reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    LTE             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    GT              reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    GTE             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    EQ              reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    NOTEQ           reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    AND             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    OR              reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    IN              reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    DIV             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    MOD             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    CONS            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    EXP             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    LBRACKET        reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    SEMICOLON       reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    RBRACKET        reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    COMMA           reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    LPAREN          reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    NOT             reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    NAME            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    REAL            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    INTEGER         reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    STRING          reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    HASH            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    TRUE            reduce using rule 57 (list_tail -> COMMA expression list_tail .)
    FALSE           reduce using rule 57 (list_tail -> COMMA expression list_tail .)


state 119

    (52) index_expression -> expression LBRACKET expression RBRACKET .
    (58) list_tail -> RBRACKET .

  ! reduce/reduce conflict for PLUS resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for TIMES resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LT resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LTE resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for GT resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for GTE resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for EQ resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for AND resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for OR resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for IN resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for DIV resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for CONS resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for EXP resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for LPAREN resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for NOT resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for NAME resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for REAL resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for INTEGER resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for STRING resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for HASH resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for TRUE resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for FALSE resolved using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LTE             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    GTE             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NOTEQ           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    CONS            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    EXP             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    NAME            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    REAL            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    INTEGER         reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    STRING          reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    HASH            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 52 (index_expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 58 (list_tail -> RBRACKET .)
    SEMICOLON       reduce using rule 58 (list_tail -> RBRACKET .)
    RBRACKET        reduce using rule 58 (list_tail -> RBRACKET .)
    COMMA           reduce using rule 58 (list_tail -> RBRACKET .)

  ! PLUS            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! MINUS           [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! TIMES           [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! DIVIDE          [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! LT              [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! LTE             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! GT              [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! GTE             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! EQ              [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! NOTEQ           [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! AND             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! OR              [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! IN              [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! DIV             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! MOD             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! CONS            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! EXP             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! LBRACKET        [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! LPAREN          [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! NOT             [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! NAME            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! REAL            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! INTEGER         [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! STRING          [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! HASH            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! TRUE            [ reduce using rule 58 (list_tail -> RBRACKET .) ]
  ! FALSE           [ reduce using rule 58 (list_tail -> RBRACKET .) ]


state 120

    (14) assign_index_list -> LBRACKET expression RBRACKET . assign_index_list
    (14) assign_index_list -> . LBRACKET expression RBRACKET assign_index_list
    (15) assign_index_list -> .

    LBRACKET        shift and go to state 103
    ASSIGN          reduce using rule 15 (assign_index_list -> .)

    assign_index_list              shift and go to state 122

state 121

    (49) tuple_tail -> expression COMMA tuple_tail .

    RPAREN          reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    PLUS            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    MINUS           reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    TIMES           reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    DIVIDE          reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    LT              reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    LTE             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    GT              reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    GTE             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    EQ              reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    NOTEQ           reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    AND             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    OR              reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    IN              reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    DIV             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    MOD             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    CONS            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    EXP             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    LBRACKET        reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    SEMICOLON       reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    RBRACKET        reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    COMMA           reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    LPAREN          reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    NOT             reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    NAME            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    REAL            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    INTEGER         reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    STRING          reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    HASH            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    TRUE            reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)
    FALSE           reduce using rule 49 (tuple_tail -> expression COMMA tuple_tail .)


state 122

    (14) assign_index_list -> LBRACKET expression RBRACKET assign_index_list .

    ASSIGN          reduce using rule 14 (assign_index_list -> LBRACKET expression RBRACKET assign_index_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for LTE in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for GTE in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for IN in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for CONS in state 97 resolved as shift
WARNING: shift/reduce conflict for EXP in state 97 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 97 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (expression -> MINUS expression)
WARNING: rejected rule (expression -> expression MINUS expression) in state 112
WARNING: reduce/reduce conflict in state 119 resolved using rule (index_expression -> expression LBRACKET expression RBRACKET)
WARNING: rejected rule (list_tail -> RBRACKET) in state 119
